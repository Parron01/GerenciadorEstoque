# docker-compose.yml completo
version: "3.8"

services:
  db:
    image: postgres:15
    env_file:
      - ./backendGo/.env
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  api:
    build:
      context: ./backendGo
      dockerfile: Dockerfile.dev
    env_file:
      - ./backendGo/.env
    environment:
      POSTGRES_HOST: db
      CORS_ALLOWED_ORIGINS: "http://localhost:5173,http://frontend:5173"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - VITE_API_BASE_URL=http://localhost:3000
    ports:
      - "5173:5173" # Changed from 80:80 to 5173:5173
    volumes:
      - ./frontend:/app # For development hot-reloading
      - /app/node_modules # Prevent overriding node_modules
    depends_on:
      - api
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    env_file:
      - ./backendGo/.env # For PGADMIN_DEFAULT_EMAIL and PGADMIN_DEFAULT_PASSWORD
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com} # Use from .env or default
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin} # Use from .env or default
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80" # Access pgAdmin on http://localhost:5050
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy # Wait for db to be healthy
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  pgadmin_data: # Add volume for pgAdmin
